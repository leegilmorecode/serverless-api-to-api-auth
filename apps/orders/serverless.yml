service: serverless-orders
variablesResolutionMode: 20210326
provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  memorySize: 128
  stage: ${opt:stage, 'develop'}
  region: ${opt:region, 'eu-west-1'}
  apiGateway:
    shouldStartNameWithService: true
  environment:
    USERPOOL_DOMAIN_NAME: ${ssm:/serverless-auth/${self:provider.stage}/userpool-domain}
    CLIENT_SECRET: 	${ssm:/serverless-auth/${self:provider.stage}/client-secret}
    CLIENT_ID: ${ssm:/serverless-auth/${self:provider.stage}/client-id}
    DELIVERIES_API_URL: !ImportValue sls-serverless-deliveries-${self:provider.stage}-ServiceEndpoint
# the following plugins are used for:
plugins:
  - serverless-webpack # used for building the code
package:
  individually: true
  # we exclude the node_modules as this keeps our lambda package size small
  exclude:
    - node_modules/**
functions:
  # create order endpoint
  create-order:
    handler: src/create-order/create-order.handler
    memorySize: 128
    timeout: 10
    # this is the api gateway integration with our lambda function
    # Note: there is no auth on this public API as it is a demo only
    events:
      - http:
          path: /orders
          method: post
resources:
  Resources:
custom:
  # webpack config
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules:
      # we also force exclude the aws-sdk through webpack
      forceExclude:
        - aws-sdk
